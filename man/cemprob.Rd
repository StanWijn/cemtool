% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cemprob.R
\name{cemprob}
\alias{cemprob}
\title{Second step of the cemtool: Define the transition probabilities, cost and utility values}
\usage{
cemprob(HS = cemtool.env$HS, HS1 = cemtool.env$HS1,
  HS2 = cemtool.env$HS2, HS3 = cemtool.env$HS3,
  HS4 = cemtool.env$HS4, HS5 = cemtool.env$HS5,
  dead = cemtool.env$dead, n.t = cemtool.env$n.t,
  control = cemtool.env$control,
  intervention = cemtool.env$intervention)
}
\arguments{
\item{HS}{Number of healthstates}

\item{HS1}{String with name of healthstate 1}

\item{HS2}{String with name of healthstate 2}

\item{HS3}{String with name of healthstate 3}

\item{HS4}{String with name of healthstate 4}

\item{HS5}{String with name of healthstate 5}

\item{dead}{String with name of absorption / death state}

\item{n.t}{Number of cycles}

\item{control}{String with name of the usual care strategy}

\item{intervention}{String with name of the intervention strategy}
}
\value{
The following variables will be created in the saved in the cemtool enviroment:

--- Empty Markov trace matrices for both strategies (m.M and m.M_treatment)

--- A dataframe with the modelinput (modelinput)

--- Discount rate for costs (d.rc) and effects (d.re)

The function will automatically run \code{cemtpm()} after finishing
}
\description{
The \code{cemtool()} package provides a step-by-step tool to guide users in building a default Markov model. 
The tool guides the user though the steps of the development of a Markov model and will present the final result using graphs and tables. 
The only prerequisite is that the user knows the structure of the model and the transition probabilities, no calculations or coding is required.
}
\details{
There are multiple software systems that can be used to build Markov models for cost-effectiveness analyses
like TreeAge, Excel or R. Although there are numerous advantages to use R over the others, 
the biggest downside is the steep learning curve from R. 
The \code{cemtool()}  package aims to close this gap by introducing a step-by-step tool
to guide users in building a default Markov models. 
The tool guides the user though the steps of the development of a Markov model 
and will present the final result using graphs and tables. 
The only prerequisite is that the user knows the structure of the model and the transition probabilities,
no calculations or coding is required.

-- \strong{Required variables in the Global Enviroment before the \code{cemprob()} function will work:}

- Number of healhstates (HS)\cr  
- Names of the healthstates (HS1, HS2 ... HSn, dead)\cr  
- Names of both the intervention (intervention) and usual care strategy (control)\cr  
- Number of cycles (n.t)\cr  
- Vector of the strategy names (Strategies)\cr  
- Vector of the healhstate names (v.n) \cr  

These can be generated with the \code{cemtool()} function.
}
\examples{
\dontrun{
cemtool() # Start from stratch (clear the cemtool environment from the Global Environment)
cemprob() # Start from the second phase (definding the parameters) 
cemtpm()  # Start from the third phase (modify the transition probability matrix)
cemrun()  # Run the model with the current m.M markov trace and m.P transition probability matrix

cemtool.env <- cemtool() # To save all input for further modification
}
}
\author{
S.R.W. Wijn MSc <stan.wijn@radboudumc.nl>
}
